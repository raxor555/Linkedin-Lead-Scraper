{
  "name": "Lead Scraper",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cc27b2d9-8de7-43ca-a741-2d150084f78e",
              "name": "currentStartIndex",
              "value": 1,
              "type": "number"
            },
            {
              "id": "fc552c57-4510-4f04-aa09-2294306d0d9f",
              "name": "maxPages",
              "value": 10,
              "type": "number"
            },
            {
              "id": "e5510e12-1ecb-4c6c-a063-ec329cb23aad",
              "name": "Value",
              "value": "={{ $json.Position }} of {{ $json.Feild }} in {{ $json.Location }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        960,
        180
      ],
      "id": "238df007-222c-43c8-a641-f7cd38185ba3",
      "name": "Set Fields"
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/customsearch/v1",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "AIzaSyDDeBGNxS14LLsbiJSPaoxq4oskLG6lMfE"
            },
            {
              "name": "cx",
              "value": "a649fc8a2816e4f8c"
            },
            {
              "name": "q",
              "value": "={{ $json.Value }} site:pk.linkedin.com"
            },
            {
              "name": "start",
              "value": "={{ $runIndex == 0 ? $node[\"Set Fields\"].json.currentStartIndex : $node[\"Pagination Check\"].json.startIndex }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1140,
        180
      ],
      "id": "48a69ab6-2157-4b56-bb83-ae96d02d893f",
      "name": "Search Google"
    },
    {
      "parameters": {
        "jsCode": "// Get the response data\nconst response = $input.first().json;\nconst items = response.items || [];\n\n// Track pagination info\nlet nextStartIndex = 1;\nif (response.queries && response.queries.nextPage && response.queries.nextPage[0]) {\n  nextStartIndex = response.queries.nextPage[0].startIndex;\n}\n\n// Calculate if we should continue (Google only allows up to 100 results)\nconst hasMoreResults = nextStartIndex <= 100;\n\n// Process the items and include pagination info in each item\nconst results = items.map(item => {\n  const titleParts = item.title.split(\" - \");\n  return {\n    name: titleParts[0] || null,\n    title: titleParts.slice(1).join(\" - \") || null,\n    link: item.link || null,\n    snippet: item.snippet || null,\n    image: item.pagemap?.cse_thumbnail?.[0]?.src || null,\n    // Add pagination info to each item\n    startIndex: nextStartIndex,\n    hasMoreResults: hasMoreResults\n  };\n});\n\n// If there are no results, return at least one item with pagination info\nif (results.length === 0) {\n  return [{ \n    json: {\n      name: null,\n      title: null,\n      link: null,\n      snippet: null,\n      image: null,\n      startIndex: nextStartIndex,\n      hasMoreResults: false\n    }\n  }];\n}\n\n// Return the processed results\nreturn results.map(r => ({ json: r }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1320,
        180
      ],
      "id": "34591f28-4629-4760-9a80-1f193a0d7a24",
      "name": "Extract Results"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1hK_YHH1VGVoPiFWH3_6Z5F8d36Ah3iomjAYQCcxQAPA",
          "mode": "list",
          "cachedResultName": "Linkedin Scrapper",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1hK_YHH1VGVoPiFWH3_6Z5F8d36Ah3iomjAYQCcxQAPA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "REDACTED_SHEET_URL"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $json.name }}",
            "title": "={{ $json.title }}",
            "link": "={{ $json.link }}",
            "snippet": "={{ $json.snippet }}",
            "image": "={{ $json.image }}",
            "results": "={{ $json.hasMoreResults }}",
            "index": "={{ $json.startIndex }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "snippet",
              "displayName": "snippet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "index",
              "displayName": "index",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "results",
              "displayName": "results",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1680,
        180
      ],
      "id": "1d5f00c9-1c9d-4e58-a22a-3d8116ae0eee",
      "name": "Add to Google",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "SDzJ5cU6EfTyJGZv",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get all input items\nconst inputItems = $input.all();\nconsole.log(\"Input items count:\", inputItems.length);\n\n// Extract pagination values with fallbacks\nlet nextStartIndex = 1;\nlet hasMoreResults = false;\n\n// Try different approaches to find the pagination info\nif (inputItems && inputItems.length > 0) {\n  const firstItem = inputItems[0];\n  \n  // Check direct properties\n  if (firstItem.json) {\n    console.log(\"First item JSON:\", JSON.stringify(firstItem.json));\n    \n    // Check for \"index\" property (instead of startIndex)\n    if (firstItem.json.index !== undefined) {\n      nextStartIndex = firstItem.json.index;\n      console.log(\"Found index:\", nextStartIndex);\n    }\n    \n    // Check for \"results\" property (instead of hasMoreResults)\n    if (firstItem.json.results !== undefined) {\n      hasMoreResults = firstItem.json.results;\n      console.log(\"Found results:\", hasMoreResults);\n    }\n  }\n}\n\n// Return pagination control info\nreturn {\n  json: {\n    continueLoop: hasMoreResults,\n    startIndex: nextStartIndex\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1860,
        180
      ],
      "id": "e1ed2aba-a3cb-4548-b2d7-f7a04ca16249",
      "name": "Pagination"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "faef2862-80a4-465b-9e0b-be5b9753dcbd",
              "leftValue": "={{ $json.continueLoop }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2040,
        180
      ],
      "id": "b80654e4-7e3a-4214-884f-3f3258df4efa",
      "name": "Pagination Check"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1500,
        180
      ],
      "id": "b4bb47b9-70d1-4280-ad01-093206d71ac7",
      "name": "Wait",
      "webhookId": "d3bbbd53-2135-45e5-a847-aad35b1c518e"
    },
    {
      "parameters": {
        "content": "## Google API Instructions\n\n1. Go to [Google Cloud Console](https://console.cloud.google.com/)\n   - Create a new project  \n   - Enable **Custom Search API**  \n   - Go to **Credentials** and copy your **API Key**\n\n2. Go to [Programmable Search Engine](https://programmablesearchengine.google.com/controlpanel/create)\n   - Create a name  \n   - Select **Search entire web**  \n   - Copy the **cx** value\n\n## Usage Limits (Free Tier)\n\n- The free tier of the Google Custom Search API allows **100 requests per day**\n- Each request returns **up to 10 search results**\n- This means you can get **up to 1,000 search results per day** at no cost\n",
        "height": 500,
        "width": 360,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "844ec229-871c-42b9-8250-6f0c49dc9d54",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "formTitle": "Linkedin Scrapper",
        "formDescription": "Provide the Position (eg CEO)\nProvide the Feild (eg Software Engineer)\nProvide the Location (eg Turkey, Islamabad)\n",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Position"
            },
            {
              "fieldLabel": "Feild"
            },
            {
              "fieldLabel": "Location"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        780,
        180
      ],
      "id": "fc5d4a4e-7d7f-484b-a081-0617dc6f1a7a",
      "name": "On form submission",
      "webhookId": "f63e0b36-38c6-4e4d-987b-8cfcf3931cae"
    }
  ],
  "pinData": {},
  "connections": {
    "Set Fields": {
      "main": [
        [
          {
            "node": "Search Google",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Google": {
      "main": [
        [
          {
            "node": "Extract Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Results": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add to Google": {
      "main": [
        [
          {
            "node": "Pagination",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pagination": {
      "main": [
        [
          {
            "node": "Pagination Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pagination Check": {
      "main": [
        [
          {
            "node": "Search Google",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Add to Google",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "Set Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ff2331a7-0151-4375-9030-31fc3455b085",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "afba0edf3025714e439d0d9a7fd00d512e4a26a7efb5d6c437ef546a6da683a9"
  },
  "id": "Cob9FNjWQCaCDMN7",
  "tags": [
    {
      "createdAt": "2025-04-01T02:13:42.209Z",
      "updatedAt": "2025-04-01T02:13:42.209Z",
      "id": "o3ynjPINuOX4Fnz4",
      "name": "youtube"
    }
  ]
}